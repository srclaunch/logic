import { Condition } from "../index";

export enum DateCondition {
  IsAfter = Condition.IsAfter,
  IsAfterOrEqual = Condition.IsAfterOrEqual,
  IsBefore = Condition.IsBefore,
  IsBeforeOrEqual = Condition.IsBeforeOrEqual,
  IsBetween = Condition.IsBetween,
  IsDate = Condition.IsDate,
  IsEqual = Condition.IsEqual,
  IsNotDate = Condition.IsNotDate,
  IsNotEqual = Condition.IsNotEqual,
  IsNotNull = Condition.IsNotNull,
  IsNotToday = Condition.IsNotToday,
  IsThisWeek = Condition.IsThisWeek,
  IsThisMonth = Condition.IsThisMonth,
  IsThisQuarter = Condition.IsThisQuarter,
  IsThisYear = Condition.IsThisYear,
  IsToday = Condition.IsToday,
  IsWeekend = Condition.IsWeekend,
}

export enum DateRangeCondition {
  IsAfter = Condition.IsAfter,
  IsBefore = Condition.IsBefore,
  IsBeforeOrAfter = Condition.IsBeforeOrAfter,
  IsBetween = Condition.IsBetween,
  IsDate = Condition.IsDate,
  IsDateRange = Condition.IsDateRange,
  IsEqual = Condition.IsEqual,
  IsNotEqual = Condition.IsNotEqual,
  IsNotNull = Condition.IsNotNull,
}

export enum DateTimeCondition {
  IsAfter = Condition.IsAfter,
  IsAfterOrEqual = Condition.IsAfterOrEqual,
  IsBefore = Condition.IsBefore,
  IsBeforeOrEqual = Condition.IsBeforeOrEqual,
  IsBetween = Condition.IsBetween,
  IsDate = Condition.IsDate,
  IsEqual = Condition.IsEqual,
  IsNotDate = Condition.IsNotDate,
  IsNotEqual = Condition.IsNotEqual,
  IsNotNull = Condition.IsNotNull,
  IsNotToday = Condition.IsNotToday,
  IsThisWeek = Condition.IsThisWeek,
  IsThisMonth = Condition.IsThisMonth,
  IsThisQuarter = Condition.IsThisQuarter,
  IsThisYear = Condition.IsThisYear,
  IsToday = Condition.IsToday,
  IsWeekend = Condition.IsWeekend,
}

export enum DayOfMonthCondition {
  IsAfter = Condition.IsAfter,
  IsAfterOrEqual = Condition.IsAfterOrEqual,
  IsBefore = Condition.IsBefore,
  IsBeforeOrEqual = Condition.IsBeforeOrEqual,
  IsBetween = Condition.IsBetween,
  IsDayOfMonth = Condition.IsDayOfMonth,
  IsEvenNumber = Condition.IsEvenNumber,
  IsEqual = Condition.IsEqual,
  IsGreaterThan = Condition.IsGreaterThan,
  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,
  IsInteger = Condition.IsInteger,
  IsLessThan = Condition.IsLessThan,
  IsLessThanOrEqual = Condition.IsLessThanOrEqual,
  IsNotEqual = Condition.IsNotEqual,
  IsNotNull = Condition.IsNotNull,
  IsNumber = Condition.IsNumber,
  IsOddNumber = Condition.IsOddNumber,
  IsToday = Condition.IsToday,
  IsWeekday = Condition.IsWeekday,
  IsWeekend = Condition.IsWeekend,
}

export enum MonthCondition {
  IsAfter = Condition.IsAfter,
  IsAfterOrEqual = Condition.IsAfterOrEqual,
  IsBefore = Condition.IsBefore,
  IsBeforeOrEqual = Condition.IsBeforeOrEqual,
  IsBetween = Condition.IsBetween,
  IsEvenNumber = Condition.IsEvenNumber,
  IsEqual = Condition.IsEqual,
  IsGreaterThan = Condition.IsGreaterThan,
  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,
  IsInteger = Condition.IsInteger,
  IsLessThan = Condition.IsLessThan,
  IsLessThanOrEqual = Condition.IsLessThanOrEqual,
  IsMonth = Condition.IsMonth,
  IsNotEqual = Condition.IsNotEqual,
  IsNotNull = Condition.IsNotNull,
  IsNumber = Condition.IsNumber,
  IsOddNumber = Condition.IsOddNumber,
  IsThisMonth = Condition.IsThisMonth,
}

export enum TimeCondition {
  IsAfter = Condition.IsAfter,
  IsAfterOrEqual = Condition.IsAfterOrEqual,
  IsBefore = Condition.IsBefore,
  IsBeforeOrEqual = Condition.IsBeforeOrEqual,
  IsBetween = Condition.IsBetween,
  IsEqual = Condition.IsEqual,
  IsNotEqual = Condition.IsNotEqual,
  IsNotNull = Condition.IsNotNull,
  IsTime = Condition.IsTime,
}

export enum TimeRangeCondition {
  IsAfter = Condition.IsAfter,
  IsBefore = Condition.IsBefore,
  IsBeforeOrAfter = Condition.IsBeforeOrAfter,
  IsBetween = Condition.IsBetween,
  IsTime = Condition.IsTime,
  IsEqual = Condition.IsEqual,
  IsNotEqual = Condition.IsNotEqual,
  IsNotNull = Condition.IsNotNull,
  IsTimeRange = Condition.IsTimeRange,
}

export enum TimeOfDayCondition {
  IsAfter = Condition.IsAfter,
  IsBefore = Condition.IsBefore,
  IsBeforeOrAfter = Condition.IsBeforeOrAfter,
  IsBetween = Condition.IsBetween,
  IsEqual = Condition.IsEqual,
  IsInList = Condition.IsInList,
  IsNotEqual = Condition.IsNotEqual,
  IsNotInList = Condition.IsNotInList,
  IsNotNull = Condition.IsNotNull,
  IsTimeOfDay = Condition.IsTimeOfDay,
  IsTimeRange = Condition.IsTimeRange,
}

export enum WeekdayCondition {
  IsAfter = Condition.IsAfter,
  IsAfterOrEqual = Condition.IsAfterOrEqual,
  IsBefore = Condition.IsBefore,
  IsBeforeOrEqual = Condition.IsBeforeOrEqual,
  IsBetween = Condition.IsBetween,
  IsEvenNumber = Condition.IsEvenNumber,
  IsEqual = Condition.IsEqual,
  IsGreaterThan = Condition.IsGreaterThan,
  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,
  IsLessThan = Condition.IsLessThan,
  IsLessThanOrEqual = Condition.IsLessThanOrEqual,
  IsNotEqual = Condition.IsNotEqual,
  IsNotNull = Condition.IsNotNull,
  IsNumber = Condition.IsNumber,
  IsOddNumber = Condition.IsOddNumber,
  IsWeekday = Condition.IsWeekday,
  IsWeekend = Condition.IsWeekend,
}

export enum YearCondition {
  IsAfter = Condition.IsAfter,
  IsAfterOrEqual = Condition.IsAfterOrEqual,
  IsBefore = Condition.IsBefore,
  IsBeforeOrEqual = Condition.IsBeforeOrEqual,
  IsBetween = Condition.IsBetween,
  IsEvenNumber = Condition.IsEvenNumber,
  IsEqual = Condition.IsEqual,
  IsGreaterThan = Condition.IsGreaterThan,
  IsGreaterThanOrEqual = Condition.IsGreaterThanOrEqual,
  IsInteger = Condition.IsInteger,
  IsLessThan = Condition.IsLessThan,
  IsLessThanOrEqual = Condition.IsLessThanOrEqual,
  IsNotEqual = Condition.IsNotEqual,
  IsNotNull = Condition.IsNotNull,
  IsNumber = Condition.IsNumber,
  IsOddNumber = Condition.IsOddNumber,
  IsThisYear = Condition.IsThisYear,
  IsYear = Condition.IsYear,
}
