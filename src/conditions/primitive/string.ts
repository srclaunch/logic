import { Condition } from '../index';

// TODO: Example the number of conditions a string can support
export enum StringCondition {
  Contains = Condition.Contains,
  HasNumberCount = Condition.HasNumberCount,
  HasLowercaseCount = Condition.HasLowercaseCount,
  HasLetterCount = Condition.HasLetterCount,
  HasSpacesCount = Condition.HasSpacesCount,
  HasSymbolCount = Condition.HasSymbolCount,
  HasUppercaseCount = Condition.HasUppercaseCount,
  IsAlpha = Condition.IsAlpha,
  IsAlphanumeric = Condition.IsAlphanumeric,
  IsAscii = Condition.IsAscii,
  IsBase64 = Condition.IsBase64,
  IsColor = Condition.IsColor,
  IsComplexEnough = Condition.IsComplexEnough,
  IsCreditCard = Condition.IsCreditCard,
  IsDataURI = Condition.IsDataURI,
  IsDomainName = Condition.IsDomainName,
  IsEmailAddress = Condition.IsEmailAddress,
  IsEthereumAddress = Condition.IsEthereumAddress,
  IsEAN = Condition.IsEAN,
  IsEIN = Condition.IsEIN,
  IsEqual = Condition.IsEqual,
  IsIBAN = Condition.IsIBAN,
  IsHSLColor = Condition.IsHSLColor,
  IsHexColor = Condition.IsHexColor,
  IsHexadecimal = Condition.IsHexadecimal,
  IsIdentityCardCode = Condition.IsIdentityCardCode,
  IsIMEI = Condition.IsIMEI,
  IsInList = Condition.IsInList,
  IsIPAddress = Condition.IsIPAddress,
  IsInIPAddressRange = Condition.IsInIPAddressRange,
  IsISBN = Condition.IsISBN,
  IsISIN = Condition.IsISIN,
  IsISMN = Condition.IsISMN,
  IsISRC = Condition.IsISRC,
  IsISSN = Condition.IsISSN,
  IsLanguage = Condition.IsLanguage,
  IsLatitude = Condition.IsLatitude,
  IsLongitude = Condition.IsLongitude,
  IsLengthEqual = Condition.IsLengthEqual,
  IsLengthGreaterThan = Condition.IsLengthGreaterThan,
  IsLengthGreaterThanOrEqual = Condition.IsLengthGreaterThanOrEqual,
  IsLengthLessThan = Condition.IsLengthLessThan,
  IsLengthLessThanOrEqual = Condition.IsLengthLessThanOrEqual,
  IsLicensePlateNumber = Condition.IsLicensePlateNumber,
  IsLowercase = Condition.IsLowercase,
  IsOctal = Condition.IsOctal,
  IsMACAddress = Condition.IsMACAddress,
  IsMD5 = Condition.IsMD5,
  IsMagnetURI = Condition.IsMagnetURI,
  IsMarkdown = Condition.IsMarkdown,
  IsMimeType = Condition.IsMimeType,
  IsMonth = Condition.IsMonth,
  IsNotInIPAddressRange = Condition.IsNotInIPAddressRange,
  IsNotInList = Condition.IsNotInList,
  IsNotNull = Condition.IsNotNull,
  IsNotRegexMatch = Condition.IsNotRegexMatch,
  IsNumber = Condition.IsNumber,
  IsNumeric = Condition.IsNumeric,
  IsPassportNumber = Condition.IsPassportNumber,
  IsPhoneNumber = Condition.IsPhoneNumber,
  IsPort = Condition.IsPort,
  IsPostalCode = Condition.IsPostalCode,
  IsProvince = Condition.IsProvince,
  IsRegexMatch = Condition.IsRegexMatch,
  IsSemanticVersion = Condition.IsSemanticVersion,
  IsSlug = Condition.IsSlug,
  IsSSN = Condition.IsSSN,
  IsState = Condition.IsState,
  IsStreetAddress = Condition.IsStreetAddress,
  IsString = Condition.IsString,
  IsTaxIDNumber = Condition.IsTaxIDNumber,
  IsURL = Condition.IsURL,
  IsUUID = Condition.IsUUID,
  IsUppercase = Condition.IsUppercase,
  IsVATIDNumber = Condition.IsVATIDNumber,
  IsWeekday = Condition.IsWeekday,
  IsWeekend = Condition.IsWeekend,
  IsYear = Condition.IsYear,
}

export enum LongTextCondition {
  Contains = Condition.Contains,
  IsAlpha = Condition.IsAlpha,
  IsAlphanumeric = Condition.IsAlphanumeric,
  IsInList = Condition.IsInList,
  IsMarkdown = Condition.IsMarkdown,
  IsNotInList = Condition.IsNotInList,
  IsNumeric = Condition.IsNumeric,
  IsLowercase = Condition.IsLowercase,
  IsString = Condition.IsString,
  IsUppercase = Condition.IsUppercase,
}
